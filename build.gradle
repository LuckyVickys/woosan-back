buildscript {
	ext {
		queryDslVersion = "5.0.0"
	}
}

plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.0'
	id 'io.spring.dependency-management' version '1.1.5'
	id 'com.github.node-gradle.node' version '3.2.1'
}

group = 'com.luckyvicky'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}

tasks.withType(JavaCompile) {
	options.compilerArgs << '-parameters'
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'mysql:mysql-connector-java:8.0.28'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'mysql:mysql-connector-java:8.0.28'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testCompileOnly 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'

	implementation 'org.mapstruct:mapstruct:1.5.1.Final'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.1.Final'

	implementation "com.querydsl:querydsl-jpa:${queryDslVersion}:jakarta"

	implementation 'org.modelmapper:modelmapper:3.1.0'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'io.springfox:springfox-boot-starter:3.0.0'
	implementation 'io.springfox:springfox-swagger-ui:3.0.0'
	implementation 'net.coobird:thumbnailator:0.4.16'

	implementation 'org.springframework.boot:spring-boot-starter-mail'

	// 스프링 시큐리티
	implementation 'org.springframework.boot:spring-boot-starter-security'

	// JWT 0.12.3
	implementation 'io.jsonwebtoken:jjwt-api:0.12.3'
	implementation 'io.jsonwebtoken:jjwt-impl:0.12.3'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.12.3'

	// 오브젝트 스토리지
	implementation 'com.amazonaws:aws-java-sdk-s3:1.12.58'

	// 언어 감지
	implementation 'com.cybozu.labs:langdetect:1.1-20120112'

	annotationProcessor(
			"com.querydsl:querydsl-apt:5.0.0:jakarta",
			"jakarta.annotation:jakarta.annotation-api",
			"jakarta.persistence:jakarta.persistence-api"
	)
}

tasks.named('test') {
	useJUnitPlatform()
}

sourceSets {
	main {
		java {
			srcDirs = ["$projectDir/src/main/java", "$projectDir/build/generated"]
		}
	}
}

def querydslSrcDir = 'src/main/generated'
clean {
	delete file(querydslSrcDir)
}

tasks.withType(JavaCompile) {
	options.generatedSourceOutputDirectory = file(querydslSrcDir)
}

// Node.js 설정
node {
	version = '16.13.0'
	npmVersion = '8.1.0'
	download = true
	workDir = file("${project.buildDir}/nodejs")
	npmWorkDir = file("${project.buildDir}/npm")
}

task appNpmInstall(type: NpmTask) {
	workingDir = file("${project.projectDir}")
	args = ['install']
}

build {
	dependsOn appNpmInstall
}

// 빌드 시 테스트 제외
tasks.withType(Test) {
	enabled = false
}
